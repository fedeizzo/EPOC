openapi: "3.0.0"
info:
  version: "1.0"
  title: "EPOC"
  description: EPOC gives you simple apis to get a well-built eating plan, and much much more.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
servers:
  - url: http://localhost:3000/
    description: Localhost

paths:
  /login:
    x-summary: Questions Collection
    post:
      description: >-
        You may call this endpoint with your user credentials to validate them against our internal db.
      summary: Login
      requestBody:
        $ref: "#/components/requestBodies/LoginRequest"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JWT"
        "401":
          description: Invalid username/password combination
        "500":
          $ref: "#/components/responses/500InternalServerError"

  /search/recipe:
    x-summary: Search targeted only to recipes
    get:
      description: >-
        Search a recipe using a string as parameter
      summary: Simple recipe search, returns basic recipe infos of the recipes that match the searchString.
      parameters:
        - $ref: "#/components/parameters/searchString"
      responses:
        "200":
          description: A list of recipes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShortRecipe"
        "500":
          $ref: "#/components/responses/500InternalServerError"
        
        # No 404 response: an empty list should do

  /recipes/{recipeId}:
    get:
      description: >-
        Search a recipe using its id as parameter.
      summary: Get a recipe by its id.
      parameters:
        - in: path
          name: recipeId
          required: true
          schema:
            type: integer
          description: The id of the recipe
      responses:
        "200":
          description: All the infos of the recipe.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompleteRecipe"
        "404":
          $ref: "#/components/responses/404NotFound"
        "500":
          $ref: "#/components/responses/500InternalServerError"

components:
  parameters:
    searchString:
      name: searchString
      in: query
      description: The string to be searched
      schema:
        type: string
      required: true
      example:
        "Primi piatti"

  schemas:
    LoginBody:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
      example:
        username: admin
        password: admin

    JWT:
      title: Json Web Token
      type: string
      example: 3fnadn8cwu9leorfbi2o9reebd8wbed832

    Ingredient:
      type: object
      description: Ingredient of some recipe, with quantity.
      properties:
        name:
          type: string
          description: Name of the ingredient
        unitOfMeasure:
          type: integer
        quantity:
          type: number
      required:
        - name
        - quantity
      example:
        name: Broccoli
        unitOfMeasure: Kilograms
        quantity: 100000

    NutritionalInfo:
      type: object
      description: nutritional info of a recipe
      properties:
        calories:
          type: number
        carbohydrate:
          type: number
        cholesterol:
          type: number
        fat:
          type: number
        fiber:
          type: number
        saturedFat:
          type: number
        sodium:
          type: number
        sugar:
          type: number
      example:
        calories: 74
        carbohydrate: 1.5
        cholesterol: 0.3
        fat: 2.5
        fiber: 2.1
        saturedFat: 0.2
        sodium: 1.3
        sugar: 1.2

    ShortRecipe:
      type: object
      properties:
        name:
          type: string
          description: Name of the recipe.
        image:
          type: string
          description: url to the image of the recipe
        description:
          type: string
          description: description of the recipe
        averageRating:
          type: number
          description: average rating of the recipe
      example:
        name: Carbonara
        image: "https://dpv87w1mllzh1.cloudfront.net/alitalia_discover/attachments/data/000/000/334/original/roma-how-to-carbonara-1920x1080.jpg?1519055920"
        description: "La pasta più buona di tutte"
        averageRating: 5

    CompleteRecipe:
      type: object
      properties:
        name:
          type: string
          description: Name of the recipe
        dateModified:
          type: string
          description: Date of last modification
        estimatedCost:
          type: integer
          description: estimated cost class
        image:
          type: string
          description: url to the image of the recipe
        categories:
          type: array
          items:
            type: string
          description: list of the cathegories of a recipe
        description:
          type: string
          description: description of the recipe
        prepTime:
          type: number
          description: time for preparation
        cookTime:
          type: number
          description: time for cooking
        totalTime:
          type: number
          description: total estimated time
        conservationTime:
          type: number
          description: estimated conservation time
        peopleFor:
          type: number
          description: number of portions
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
          description: ingredients of the recipe
        keywords:
          type: array
          items:
            type: string
          description: keywords to identify the recipe
        lables:
          type: array
          items:
            type: string
          description: labels of the recipe
        averageRating:
          type: number
          description: average rating of the recipe
        numberOfRatings:
          type: number
          description: number of ratings for the recipe
        requiredTools:
          type: array
          items:
            type: string
          description: list of tools needed for this recipe
        nutritionalInfos:
          $ref: "#/components/schemas/NutritionalInfo"
      example:
        name: "Carbonara"
        dateModified: "20-09-2013-8:34:25"
        estimatedCost: "medium"
        image: "https://dpv87w1mllzh1.cloudfront.net/alitalia_discover/attachments/data/000/000/334/original/roma-how-to-carbonara-1920x1080.jpg?1519055920"
        categories:
          - "primi piatti"
          - "classici"
        description: "La pasta più buona di tutte"
        prepTime: 5
        cookTime: 20
        totalTime: 20
        conservationTime: 2
        peopleFor: 4
        ingredients:
          - name: "uova"
            quantity: 2
          - name: "spaghetti"
            quantity: 500
            unitOfMeasure: "grams"
          - name: "all the other"
            quantity: 100
        keywords:
          - "buona"
          - "carbonara"
          - "pancetta"
          - "uova"
        labels:
          - "primo piatto"
          - "tradizionale"
        averageRating: 5
        numberOfRatings: 1246
        requiredTools:
          - "pentole"
          - "fornello"
        nutritionalInfos:
          calories: 74
          carbohydrate: 1.5
          cholesterol: 0.3
          fat: 2.5
          fiber: 2.1
          saturedFat: 0.2
          sodium: 1.3
          sugar: 1.2

  requestBodies:
    LoginRequest:
      description: "Login Request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginBody"
          example:
            username: "Mario"
            password: "mariuccio123"

  responses:
    404NotFound:
      description: Resource not found
      content:
        text/plain:
          example: "404: Not found"

    500InternalServerError:
      description: Internal server error
      content:
        text/plain:
          example: "500: Internal server error"
